use crate::ui::viewer::app::App;
use eframe::Renderer;
use egui::ViewportBuilder;
use std::path::PathBuf;

pub fn run_native(path: Option<PathBuf>) {
    eframe::run_native(
        "blp-rs",
        eframe::NativeOptions {
            viewport: ViewportBuilder::default()
                .with_title("blp-rs")
                .with_inner_size([800.0, 684.0])
                .with_decorations(false), // üëà –±–µ–∑ —Ä–∞–º–æ–∫ –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞
            // .with_transparent(true)    // üëà –µ—Å–ª–∏ –Ω–∞–¥–æ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–µ –æ–∫–Ω–æ
            // .with_always_on_top(true)  // üëà –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–æ–≤–µ—Ä—Ö –≤—Å–µ—Ö
            renderer: Renderer::Wgpu, // << Metal –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–∞ macOS
            ..Default::default()
        },
        Box::new(|cc| -> Result<Box<dyn eframe::App>, _> {
            let mut app = App::new(&cc.egui_ctx);
            app.set_initial_file(path);
            Ok(Box::new(app))
        }),
    )
    .expect("failed to run eframe");
}
